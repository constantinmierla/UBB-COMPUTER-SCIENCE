        -:    0:Source:/mnt/d/FMI UBB CLUJ 2023-2026/UBB-COMPUTER-SCIENCE/SEMESTRUL 2/PROGRAMARE ORIENTATA OBIECT/LABORATOR/lab 6 static/repository.cpp
        -:    0:Graph:/mnt/d/FMI UBB CLUJ 2023-2026/UBB-COMPUTER-SCIENCE/SEMESTRUL 2/PROGRAMARE ORIENTATA OBIECT/LABORATOR/lab 6 static/cmake-build-debug-coverage/CMakeFiles/lab_6_static.dir/repository.cpp.gcno
        -:    0:Data:/mnt/d/FMI UBB CLUJ 2023-2026/UBB-COMPUTER-SCIENCE/SEMESTRUL 2/PROGRAMARE ORIENTATA OBIECT/LABORATOR/lab 6 static/cmake-build-debug-coverage/CMakeFiles/lab_6_static.dir/repository.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by Costi on 29-Mar-24.
        -:    3://
        -:    4:
        -:    5:#include "repository.h"
        -:    6:#include <iostream>
        -:    7:#include <sstream>
        -:    8:
        -:    9:using std::ostream;
        -:   10:using std::stringstream;
        -:   11:
function _ZN10MasinaRepo5storeERK6Masina called 11 returned 100% blocks executed 100%
       11:   12:bool MasinaRepo::store(const Masina& m){
       11:   13:    if(exist(m)){
       11:   13-block  0
call    0 returned 11
branch  1 taken 3 (fallthrough)
branch  2 taken 8
        3:   14:        return false;
        3:   14-block  0
        -:   15:    }
        8:   16:    all.push_back(m);
        8:   16-block  0
call    0 returned 8
        8:   17:    return true;
        -:   18:}
function _ZN10MasinaRepo13delMasinaRepoEi called 6 returned 100% blocks executed 90%
        6:   19:bool MasinaRepo::delMasinaRepo(int nr) {
        6:   20:    if (nr >= 0)
        6:   20-block  0
branch  0 taken 5 (fallthrough)
branch  1 taken 1
        -:   21:    {
        5:   22:        int pozitie = -1;
        8:   23:        for(int i = 0; i < (int)all.size(); i++)
        5:   23-block  0
        3:   23-block  1
        8:   23-block  2
call    0 returned 8
branch  1 taken 6
branch  2 taken 2 (fallthrough)
        -:   24:        {
        6:   25:            if(all[i].getNR() == nr)
        6:   25-block  0
call    0 returned 6
call    1 returned 6
branch  2 taken 3 (fallthrough)
branch  3 taken 3
        -:   26:            {
        3:   27:                pozitie = i;
        3:   28:                break;
        3:   28-block  0
        -:   29:            }
        -:   30:        }
        5:   31:        if(pozitie == -1) {
        5:   31-block  0
branch  0 taken 2 (fallthrough)
branch  1 taken 3
        -:   32:            //all.erase(all.begin(), all.begin() + 1);
        2:   33:            return false;
        2:   33-block  0
        -:   34:        }
        -:   35:        else
        3:   36:            all.erase(all.begin() + pozitie);
        3:   36-block  0
call    0 returned 3
call    1 returned 3
call    2 returned 3
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
    $$$$$:   36-block  1
    $$$$$:   36-block  2
        3:   37:        return true;
        3:   37-block  0
        -:   38:    }
        -:   39:    else
        1:   40:        return false;
        1:   40-block  0
        -:   41:}
        -:   42:
function _ZN10MasinaRepo16modifyMasinaRepoEiRK6Masina called 4 returned 100% blocks executed 100%
        4:   43:bool MasinaRepo::modifyMasinaRepo(int nr, const Masina &masina_de_modificat) {
        4:   44:    if(nr >= 0)
        4:   44-block  0
branch  0 taken 3 (fallthrough)
branch  1 taken 1
        -:   45:    {
        5:   46:        for(auto & i : all)
        3:   46-block  0
call    0 returned 3
call    1 returned 3
        4:   46-block  1
call    2 returned 4
        2:   46-block  2
call    3 returned 2
        5:   46-block  3
call    4 returned 5
branch  5 taken 4
branch  6 taken 1 (fallthrough)
        -:   47:        {
        4:   48:            if (i.getNR() == nr)
call    0 returned 4
branch  1 taken 2 (fallthrough)
branch  2 taken 2
        -:   49:            {
        2:   50:                i = masina_de_modificat;
        2:   50-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   51:                return true;
        2:   51-block  0
        -:   52:            }
        -:   53:        }
        1:   54:        return false;
        1:   54-block  0
        -:   55:    }
        -:   56:    else
        1:   57:        return false;
        1:   57-block  0
        -:   58:}
        -:   59:
function _ZN10MasinaRepo13srcMasinaRepoEi called 2 returned 50% blocks executed 74%
        2:   60:const Masina &MasinaRepo::srcMasinaRepo(int nr) {
        2:   61:    if(nr >= 0) {
        2:   61-block  0
branch  0 taken 2 (fallthrough)
branch  1 taken 0
        3:   62:        for (const auto & i : all) {
        2:   62-block  0
call    0 returned 2
call    1 returned 2
        2:   62-block  1
call    2 returned 2
        1:   62-block  2
call    3 returned 1
        3:   62-block  3
call    4 returned 3
branch  5 taken 2
branch  6 taken 1 (fallthrough)
        2:   63:            if (i.getNR() == nr)
call    0 returned 2
branch  1 taken 1 (fallthrough)
branch  2 taken 1
        1:   64:                return i;
        1:   64-block  0
        1:   64-block  1
        -:   65:        }
        -:   66:    }
        1:   67:    throw MasinaRepoException("Nu exista masina!");
        1:   67-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        1:   67-block  1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   67-block  2
call    8 returned 1
call    9 returned 1
call   10 returned 0
    $$$$$:   67-block  3
call   11 never executed
    $$$$$:   67-block  4
    $$$$$:   67-block  5
call   12 never executed
    $$$$$:   67-block  6
    $$$$$:   67-block  7
call   13 never executed
        -:   68:}
        -:   69:
function _ZNK10MasinaRepo5existERK6Masina called 11 returned 100% blocks executed 94%
       11:   70:bool MasinaRepo::exist(const Masina &m) const {
        -:   71:    try{
       27:   72:        find(m.getProducator(), m.getModel());
       11:   72-block  0
call    0 returned 11
branch  1 taken 11 (fallthrough)
branch  2 taken 0 (throw)
       11:   72-block  1
call    3 returned 11
branch  4 taken 11 (fallthrough)
branch  5 taken 0 (throw)
       11:   72-block  2
call    6 returned 11
branch  7 taken 3 (fallthrough)
branch  8 taken 8 (throw)
        3:   72-block  3
call    9 returned 3
call   10 returned 3
        8:   72-block  4
call   11 returned 8
        8:   72-block  5
        8:   72-block  6
call   12 returned 8
        8:   72-block  7
        3:   73:        return true;
        -:   74:    }
        8:   75:    catch(MasinaRepoException&)
        8:   75-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 8
        8:   75-block  1
call    2 returned 8
        -:   76:    {
        8:   77:        return false;
        8:   78:    }
        -:   79:}
        -:   80:
function _ZNK10MasinaRepo4findERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ called 13 returned 31% blocks executed 64%
       13:   81:const Masina& MasinaRepo::find(const std::string& producator, const std::string& model) const {
       19:   82:    for(const auto& m: all)
       13:   82-block  0
call    0 returned 13
call    1 returned 13
       10:   82-block  1
call    2 returned 10
        6:   82-block  2
call    3 returned 6
       19:   82-block  3
call    4 returned 19
branch  5 taken 10
branch  6 taken 9 (fallthrough)
        -:   83:    {
       10:   84:        if(m.getProducator() == producator && m.getModel() == model)
call    0 returned 10
branch  1 taken 10 (fallthrough)
branch  2 taken 0 (throw)
       10:   84-block  0
call    3 returned 10
branch  4 taken 4 (fallthrough)
branch  5 taken 6
        4:   84-block  1
call    6 returned 4
branch  7 taken 4 (fallthrough)
branch  8 taken 0 (throw)
        4:   84-block  2
call    9 returned 4
branch 10 taken 4 (fallthrough)
branch 11 taken 0
        4:   84-block  3
        6:   84-block  4
       10:   84-block  5
branch 12 taken 4 (fallthrough)
branch 13 taken 6
        4:   84-block  6
call   14 returned 4
       10:   84-block  7
branch 15 taken 10 (fallthrough)
branch 16 taken 0
       10:   84-block  8
call   17 returned 10
       10:   84-block  9
branch 18 taken 4 (fallthrough)
branch 19 taken 6
    $$$$$:   84-block 10
branch 20 never executed
branch 21 never executed
    $$$$$:   84-block 11
call   22 never executed
    $$$$$:   84-block 12
    $$$$$:   84-block 13
branch 23 never executed
branch 24 never executed
    $$$$$:   84-block 14
call   25 never executed
    $$$$$:   84-block 15
        4:   85:            return m;
        4:   85-block  0
        4:   85-block  1
        -:   86:    }
        9:   87:    throw MasinaRepoException("Nu exista masina!");
        9:   87-block  0
call    0 returned 9
call    1 returned 9
call    2 returned 9
branch  3 taken 9 (fallthrough)
branch  4 taken 0 (throw)
        9:   87-block  1
call    5 returned 9
branch  6 taken 9 (fallthrough)
branch  7 taken 0 (throw)
        9:   87-block  2
call    8 returned 9
call    9 returned 9
call   10 returned 0
    $$$$$:   87-block  3
call   11 never executed
    $$$$$:   87-block  4
    $$$$$:   87-block  5
call   12 never executed
    $$$$$:   87-block  6
    $$$$$:   87-block  7
call   13 never executed
        -:   88:}
        -:   89:
function _ZNK10MasinaRepo6getAllEv called 9 returned 100% blocks executed 100%
        9:   90:const vector<Masina>& MasinaRepo::getAll() const noexcept {
        9:   91:    return all;
        9:   91-block  0
        -:   92:}
        -:   93:
        -:   94:/*ostream& operator<<(ostream& out, const MasinaRepoException& ex)
        -:   95:{
        -:   96:    out << ex.msg;
        -:   97:    return out;
        -:   98:}*/
