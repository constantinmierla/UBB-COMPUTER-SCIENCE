     1                                  ; Se da un fisier text care contine litere, spatii si puncte. 
     2                                  ; Sa se citeasca continutul fisierului, sa se determine numarul de 
     3                                  ; cuvinte si sa se afiseze pe ecran aceasta valoare. 
     4                                  ; (Se considera cuvant orice secventa de litere separate prin spatiu sau punct)
     5                                  
     6                                  bits 32
     7                                  
     8                                  global start
     9                                  
    10                                  extern exit, fopen, fread, fclose, printf
    11                                  import exit msvcrt.dll
    12                                  import fopen msvcrt.dll
    13                                  import fread msvcrt.dll
    14                                  import fclose msvcrt.dll
    15                                  import printf msvcrt.dll
    16                                  
    17                                  segment data use32 class = data
    18 00000000 66696C652E74787400          file_name db "file.txt", 0 ; numele fisierului care va fi creat
    19 00000009 7200                        mode_access db "r", 0     ; modul de deschidere a fisierului - r pentru citire
    20                                      len equ 100                ; numarul maxim de elemente citite din fisier
    21 0000000B 00<rept>                    text times (len + 1) db 0  ; sirul in care se va citi textul din fisier
    22 00000070 FFFFFFFF                    descriptor dd -1           ; descriptorul fisierului - necesar pentru a putea face referire la fisier
    23 00000074 416D20636974697420-         format db "Am citit %d cuvinte din fisier. Textul este: %s", 0
    23 0000007D 256420637576696E74-
    23 00000086 652064696E20666973-
    23 0000008F 6965722E2054657874-
    23 00000098 756C20657374653A20-
    23 000000A1 257300             
    24                                                                 ; formatul - utilizat pentru afisarea textului citit din fisier
    25                                  
    26                                  segment code use32 class = code
    27                                      start:
    28                                          ; apelam functia fopen pentru a deschide fisierul
    29                                          ; functia va returna in EAX descriptorul fisierului sau 0 in caz de eroare
    30                                          ; eax = fopen(file_name, mode_access)
    31 00000000 68[09000000]                    push dword mode_access
    32 00000005 68[00000000]                    push dword file_name
    33 0000000A FF15[00000000]                  call [fopen]
    34 00000010 83C408                          add esp, 4 * 2 ; eliberam parametri de pe stiva
    35                                  
    36 00000013 A3[70000000]                    mov [descriptor], eax ; salvam valoarea returnata de fopen in variabila descriptor
    37                                  
    38                                          ; verificam daca functia fopen a creat cu succes fisierul
    39                                          ; (daca EAX != 0)
    40 00000018 83F800                          cmp eax, 0
    41                                          ;je final ; daca EAX == 0, atunci iesim din program
    42                                  
    43                                          ; apelam functia fread pentru a citi textul din fisier
    44                                          ; EAX = fread(text, 1, len, descriptor)
    45 0000001B FF35[70000000]                  push dword [descriptor]
    46 00000021 6A64                            push dword len
    47 00000023 6A01                            push dword 1
    48 00000025 68[0B000000]                    push dword text
    49 0000002A FF15[00000000]                  call [fread]
    50 00000030 83C410                          add esp, 4 * 4
    51                                  
    52                                          ; urmeaza sa aflam numarul de cuvinte din fisier
    53                                          ; pentru aceasta, vom parcurge sirul de caractere citit din fisier
    54                                          ; si vom numara cate cuvinte intalnim
    55 00000033 BE[0B000000]                    mov esi, text ; ESI = adresa de inceput a sirului de caractere
    56 00000038 BB00000000                      mov ebx, 0    ; EBX = numarul de cuvinte intalnite
    57                                          
    58                                          ; parcurgem sirul de caractere
    59                                          while:
    60                                              ; verificam daca am ajuns la sfarsitul sirului
    61 0000003D 803E00                              cmp byte [esi], 0
    62 00000040 7420                                je check_last_char_not_space
    63                                  
    64                                              ; verificam daca caracterul curent este diferit de spatiu si punct
    65                                              ; daca da, atunci verificam daca urmatorul caracter este spatiu sau punct
    66 00000042 803E20                              cmp byte [esi], ' '
    67 00000045 7402                                je check_not_dot
    68 00000047 EB07                                jmp process_space_or_dot
    69                                  
    70                                              check_not_dot:
    71 00000049 803E2E                                  cmp byte [esi], '.'
    72 0000004C 7502                                    jne process_space_or_dot
    73                                  
    74                                                  ; daca am ajuns aici, inseamna ca caracterul curent este spatiu sau punct
    75 0000004E EB0F                                    jmp next_char
    76                                  
    77                                              ; verificam daca urmatorul caracter este spatiu sau punct
    78                                              process_space_or_dot:
    79 00000050 807E0120                                cmp byte [esi + 1], ' '
    80 00000054 7408                                    je word_found
    81 00000056 807E012E                                cmp byte [esi + 1], '.'
    82 0000005A 7402                                    je word_found
    83                                  
    84                                                  ; daca am ajuns aici, inseamnca ca am gasit o litera
    85 0000005C EB01                                    jmp next_char
    86                                  
    87                                              word_found:
    88 0000005E 43                                      inc ebx ; am gasit un cuvant, deci incrementam numarul de cuvinte
    89                                  
    90                                              next_char:
    91 0000005F 46                                      inc esi ; trecem la urmatorul caracter
    92 00000060 EBDB                                    jmp while ; ne intoarcem la inceputul buclei
    93                                          
    94                                          ; verificam daca am numarat ultimul cuvant
    95                                          check_last_char_not_space:
    96 00000062 807EFF20                            cmp byte [esi - 1], ' '
    97 00000066 7502                                jne check_last_char_dot
    98 00000068 EB09                                jmp end_while
    99                                  
   100                                          check_last_char_dot:
   101 0000006A 807EFF2E                            cmp byte [esi - 1], '.'
   102 0000006E 7502                                jne inc_ebx
   103 00000070 EB01                                jmp end_while
   104                                  
   105                                          inc_ebx:
   106 00000072 43                                  inc ebx ; incrementam numarul de cuvinte pentru ultimul cuvant
   107                                  
   108                                          end_while:
   109                                              ; afisam numarul de cuvinte intalnite si textul citit din fisier
   110 00000073 68[0B000000]                        push dword text
   111 00000078 53                                  push dword ebx
   112 00000079 68[74000000]                        push dword format
   113 0000007E FF15[00000000]                      call [printf]
   114 00000084 83C40C                              add esp, 4 * 3
   115                                  
   116                                              ; apelam functia fclose pentru a inchide fisierul
   117                                              ; fclose(descriptor)
   118 00000087 FF35[70000000]                      push dword [descriptor]
   119 0000008D FF15[00000000]                      call [fclose]
   120 00000093 83C404                              add esp, 4 * 1
   121                                  
   122                                          ;final:   
   123 00000096 6A00                            push dword 0
   124 00000098 FF15[00000000]                  call[exit]
