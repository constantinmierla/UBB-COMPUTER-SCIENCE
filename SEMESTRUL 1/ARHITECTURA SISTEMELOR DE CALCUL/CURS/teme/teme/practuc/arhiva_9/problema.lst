     1                                  bits 32 
     2                                  
     3                                  global start        
     4                                  
     5                                  extern exit, fopen, scanf, fprintf, fclose, fread               
     6                                  import exit msvcrt.dll   
     7                                  import fopen msvcrt.dll
     8                                  import scanf msvcrt.dll
     9                                  import fprintf msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  import fread msvcrt.dll
    12                                  
    13                                  ; De la tastatura se citeste un nume de fisier input. 
    14                                  ; Se creaza un alt fisier de output in care se pune continutul fisierului de input su toate caracterele mici schimbate cu codul lor ascii.
    15                                  
    16                                  segment data use32 class=data
    17 00000000 00<rept>                    nume_fisier_input times 100 db 0
    18 00000064 FFFFFFFF                    descriptor_input dd -1
    19                                      
    20 00000068 6F75747075742E7478-         nume_fisier_out db "output.txt", 0
    20 00000071 7400               
    21 00000073 FFFFFFFF                    descriptor_output dd -1
    22                                      
    23 00000077 257300                      format_string db '%s', 0
    24 0000007A 612B00                      mod_acces db 'a+', 0
    25                                      
    26 0000007D 00                          buffer db 0
    27                                      
    28 0000007E 256300                      format_char db '%c', 0
    29 00000081 256400                      format_int db '%d', 0
    30                                  
    31                                  segment code use32 class=code
    32                                      start:
    33 00000000 68[00000000]                    push dword nume_fisier_input
    34 00000005 68[77000000]                    push dword format_string
    35 0000000A FF15[00000000]                  call [scanf]
    36 00000010 83C408                          add esp, 4 * 2
    37                                          
    38                                          ; fopen
    39 00000013 68[7A000000]                    push dword mod_acces
    40 00000018 68[00000000]                    push dword nume_fisier_input
    41 0000001D FF15[00000000]                  call [fopen]
    42 00000023 83C408                          add esp, 4 * 2
    43                                          
    44 00000026 83F800                          cmp eax, 0
    45 00000029 0F84C1000000                    je finish
    46 0000002F A3[64000000]                    mov [descriptor_input], eax
    47                                          
    48 00000034 68[7A000000]                    push dword mod_acces
    49 00000039 68[68000000]                    push dword nume_fisier_out
    50 0000003E FF15[00000000]                  call [fopen]
    51 00000044 83C408                          add esp, 4 * 2
    52                                          
    53 00000047 83F800                          cmp eax, 0
    54 0000004A 0F84A0000000                    je finish
    55 00000050 A3[73000000]                    mov [descriptor_output], eax
    56                                          
    57                                          ; fread
    58 00000055 FF35[64000000]                  push dword [descriptor_input]
    59 0000005B 6A01                            push dword 1
    60 0000005D 6A01                            push dword 1
    61 0000005F 68[7D000000]                    push dword buffer
    62 00000064 FF15[00000000]                  call [fread]
    63 0000006A 83C410                          add esp, 4 * 4
    64                                          while_caractere_in_input:
    65 0000006D 83F800                              cmp eax, 0
    66 00000070 745F                                je stop_citire
    67                                              
    68 00000072 B800000000                          mov eax, 0
    69 00000077 A0[7D000000]                        mov al, [buffer]
    70 0000007C 83F800                              cmp eax, 0
    71 0000007F 7421                                je in_output
    72                                              
    73 00000081 83F861                              cmp eax, 'a'
    74 00000084 721C                                jb in_output
    75 00000086 83F87A                              cmp eax, 'z'
    76 00000089 7717                                ja in_output
    77                                              
    78                                              ; daca am aj aici, inseamna ca e litera si ii pun codul ascii
    79                                              ; fprintf
    80 0000008B 50                                  push eax
    81 0000008C 68[81000000]                        push dword format_int
    82 00000091 FF35[73000000]                      push dword [descriptor_output]
    83 00000097 FF15[00000000]                      call [fprintf]
    84 0000009D 83C40C                              add esp, 4 * 3
    85 000000A0 EB15                                jmp citire
    86                                              
    87                                              in_output:
    88                                                  ; pun caracterul asa cum e elk
    89 000000A2 50                                      push eax
    90 000000A3 68[7E000000]                            push dword format_char
    91 000000A8 FF35[73000000]                          push dword [descriptor_output]
    92 000000AE FF15[00000000]                          call [fprintf]
    93 000000B4 83C40C                                  add esp, 4 * 3
    94                                                  
    95                                              citire:
    96                                                  ; fread
    97 000000B7 FF35[64000000]                          push dword [descriptor_input]
    98 000000BD 6A01                                    push dword 1
    99 000000BF 6A01                                    push dword 1
   100 000000C1 68[7D000000]                            push dword buffer
   101 000000C6 FF15[00000000]                          call [fread]
   102 000000CC 83C410                                  add esp, 4 * 4
   103 000000CF EB9C                            jmp while_caractere_in_input
   104                                              
   105                                          stop_citire:
   106 000000D1 90                                  nop
   107                                              
   108                                          ; fclose()
   109 000000D2 FF35[64000000]                  push dword [descriptor_input]
   110 000000D8 FF15[00000000]                  call [fclose]
   111 000000DE 83C404                          add esp, 4
   112                                          
   113 000000E1 FF35[73000000]                  push dword [descriptor_output]
   114 000000E7 FF15[00000000]                  call [fclose]
   115 000000ED 83C404                          add esp, 4
   116                                      
   117                                      finish:
   118 000000F0 6A00                            push dword 0    
   119 000000F2 FF15[00000000]                  call [exit]       
