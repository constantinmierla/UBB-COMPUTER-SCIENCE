     1                                  bits 32 
     2                                  
     3                                  global start        
     4                                  
     5                                  extern exit, scanf, fopen, fclose, fscanf, printf               
     6                                  import exit msvcrt.dll 
     7                                  import scanf msvcrt.dll
     8                                  import fopen msvcrt.dll
     9                                  import fclose msvcrt.dll 
    10                                  import fscanf msvcrt.dll 
    11                                  import printf msvcrt.dll 
    12                                  
    13                                  ; citeste de la tastatura un nr din fisier si un numar
    14                                  ; in fisier numere
    15                                  ; afisez cate numere sunt mai mici sau egale decat numarul citit de la tastatura
    16                                  
    17                                  segment data use32 class=data
    18 00000000 00<rept>                    nume_fisier times 100 db 0
    19 00000064 612B00                      mod_acces db 'a+', 0
    20 00000067 FFFFFFFF                    descriptor_fisier dd -1
    21                                      
    22 0000006B 00                          numar_count db 0
    23 0000006C 00000000                    numar_citit dd 0
    24 00000070 00000000                    numar_aux dd 0
    25                                      
    26 00000074 256400                      format_int db '%d', 0
    27 00000077 257300                      format_string db '%s', 0
    28                                      
    29 0000007A 2564206E756D657265-         mesaj_afisare db '%d numere sunt mai mici sau egale decat numarul %d citit de la tastatura', 0
    29 00000083 2073756E74206D6169-
    29 0000008C 206D69636920736175-
    29 00000095 206567616C65206465-
    29 0000009E 636174206E756D6172-
    29 000000A7 756C20256420636974-
    29 000000B0 6974206465206C6120-
    29 000000B9 746173746174757261-
    29 000000C2 00                 
    30                                  
    31                                  segment code use32 class=code
    32                                      start:
    33 00000000 68[00000000]                    push dword nume_fisier
    34 00000005 68[77000000]                    push dword format_string
    35 0000000A FF15[00000000]                  call [scanf]
    36 00000010 83C408                          add esp, 4 * 2
    37                                          
    38 00000013 68[6C000000]                    push dword numar_citit
    39 00000018 68[74000000]                    push dword format_int
    40 0000001D FF15[00000000]                  call [scanf]
    41 00000023 83C408                          add esp, 4 * 2
    42                                          
    43                                          ; fopen()
    44 00000026 68[64000000]                    push dword mod_acces
    45 0000002B 68[00000000]                    push dword nume_fisier
    46 00000030 FF15[00000000]                  call [fopen]
    47 00000036 83C408                          add esp, 4 * 2
    48                                          
    49 00000039 83F800                          cmp eax, 0
    50 0000003C 7472                            je finish
    51 0000003E A3[67000000]                    mov [descriptor_fisier], eax
    52                                          
    53                                          citire:
    54                                              ;fscanf
    55 00000043 68[70000000]                        push dword numar_aux
    56 00000048 68[74000000]                        push dword format_int
    57 0000004D FF35[67000000]                      push dword [descriptor_fisier]
    58 00000053 FF15[00000000]                      call [fscanf]
    59 00000059 83C40C                              add esp, 4 * 3
    60                                              
    61                                              ; verific daca s a citit ceva
    62 0000005C 83F8FF                              cmp eax, -1
    63 0000005F 7420                                je stop_citire
    64                                              
    65 00000061 A1[70000000]                        mov eax, [numar_aux]
    66 00000066 8B1D[6C000000]                      mov ebx, [numar_citit]
    67 0000006C 39D8                                cmp eax, ebx
    68 0000006E 7E02                                jle mai_mic_sau_egal
    69                                              
    70 00000070 EB0C                                jmp continua
    71                                              
    72                                              mai_mic_sau_egal:
    73                                                  ; updatez nr de numere
    74 00000072 A0[6B000000]                            mov al, [numar_count]
    75 00000077 FEC0                                    inc al
    76 00000079 A2[6B000000]                            mov [numar_count], al
    77                                                  
    78                                              continua:
    79 0000007E 90                                      nop
    80 0000007F EBC2                            jmp citire
    81                                              
    82                                          stop_citire:
    83 00000081 90                                  nop
    84                                              
    85                                          ; afisez
    86 00000082 FF35[6C000000]                  push dword [numar_citit]
    87 00000088 B800000000                      mov eax, 0
    88 0000008D A0[6B000000]                    mov al, [numar_count]
    89 00000092 50                              push eax
    90 00000093 68[7A000000]                    push mesaj_afisare
    91 00000098 FF15[00000000]                  call [printf]
    92 0000009E 83C408                          add esp, 4 * 2
    93                                          
    94                                          ; fclose()
    95 000000A1 FF35[67000000]                  push dword [descriptor_fisier]
    96 000000A7 FF15[00000000]                  call [fclose]
    97 000000AD 83C404                          add esp, 4
    98                                      
    99                                      finish:
   100 000000B0 6A00                            push dword 0    
   101 000000B2 FF15[00000000]                  call [exit]       
