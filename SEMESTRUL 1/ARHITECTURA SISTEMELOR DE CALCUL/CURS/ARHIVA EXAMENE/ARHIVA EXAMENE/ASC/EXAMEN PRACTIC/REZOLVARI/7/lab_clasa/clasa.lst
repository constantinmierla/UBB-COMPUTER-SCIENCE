     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit,printf,fopen,fclose,fprintf
     8                                  import exit msvcrt.dll    
     9                                  import fclose msvcrt.dll    
    10                                  import fprintf msvcrt.dll    
    11                                  import fopen msvcrt.dll    
    12                                  import printf msvcrt.dll    
    13                                  
    14                                  
    15                                  ; our data is declared here (the variables needed by our program)
    16                                  segment data use32 class=data
    17                                      ; Se da un sir de quadword in data segment in baza 16.
    18                                      ; a) Sa se printeze pe ecran sirul bite-urilor care compun quadword-ul
    19                                      ; b) Sa se extraga din fiecare quadword acele word-uri care au ultima cifra egala cu o constanta k, definita in data segment
    20                                      ; c) sa se extraga double-word-urile a caror valoare este in intervalul [AAAh, FFFh] Sa se printeze in fisier numarul double-word-urilor extrase
    21 00000000 00000000                cnt dd 0
    22 00000004 8877665544332211FF-     a dq 1122334455667788h,00000AAA00000FFFh,1234123400000BCDh
    22 0000000D 0F0000AA0A0000CD0B-
    22 00000016 000034123412       
    23                                  lena equ ($-a)/8
    24 0000001C FF                      aa db -1
    25 0000001D 0000<rept>              sir_word times lena*4 dw 0
    26 00000035 257300                  format_afisare db '%s',0
    27 00000038 02000000                doi dd 2
    28 0000003C 2000                    spatiu db ' ',0
    29 0000003E 0200                    k dw 2h
    30 00000040 1000                    hexa dw 10h
    31 00000042 0000                    aux dw 0
    32 00000044 00<rept>                sir times 8*4+1 db 0
    33 00000065 746578742E74787400      fisier db 'text.txt',0
    34 0000006E 7700                    mod_acces db 'w',0
    35                                  const1 equ 0xAAA
    36                                  const2 equ 0xFFF
    37 00000070 00000000                descriptor dd 0
    38 00000074 256400                  format_digit db '%d',0
    39                                  ; our code starts here
    40                                  segment code use32 class=code
    41                                      start:
    42                                          ; ...
    43                                          ; c) sa se extraga double-word-urile a caror valoare este in intervalul [AAAh, FFFh] Sa se printeze in fisier numarul double-word-urilor extrase
    44 00000000 BB00000000                      mov ebx,0
    45 00000005 BF[04000000]                    mov edi,a
    46                                          rpt:
    47 0000000A 43                              inc ebx
    48                                          
    49                                          ;primul dublu cuvant
    50 0000000B 8B4704                          mov eax,[edi+4]
    51                                          
    52 0000000E 3DAA0A0000                      cmp eax,const1
    53 00000013 720E                            jb sari
    54 00000015 3DFF0F0000                      cmp eax,const2
    55 0000001A 7707                            ja sari
    56 0000001C 8305[00000000]01                add dword[cnt],1
    57                                          sari:
    58                                          
    59                                          ;al doilea dublu cuvant
    60 00000023 8B07                            mov eax,[edi]
    61                                          
    62 00000025 3DAA0A0000                      cmp eax,const1
    63 0000002A 720E                            jb sari2
    64 0000002C 3DFF0F0000                      cmp eax,const2
    65 00000031 7707                            ja sari2
    66 00000033 8305[00000000]01                add dword[cnt],1
    67                                          sari2:
    68                                          ;AFISARE
    69 0000003A 83C708                          add edi,8
    70 0000003D 83FB03                          cmp ebx,lena
    71 00000040 75C8                            jne rpt
    72                                          ;fopen(fisier,mod_acces)
    73 00000042 68[6E000000]                    push dword mod_acces
    74 00000047 68[65000000]                    push dword fisier
    75 0000004C FF15[00000000]                  call [fopen]
    76 00000052 83C408                          add esp,4*2
    77 00000055 A3[70000000]                    mov [descriptor],eax
    78                                          ;fscanf(descriptor,format_digit,cnt)
    79 0000005A FF35[00000000]                  push dword[cnt]
    80 00000060 68[74000000]                    push dword format_digit
    81 00000065 FF35[70000000]                  push dword [descriptor]
    82 0000006B FF15[00000000]                  call [fprintf]
    83 00000071 83C40C                          add esp,4*3
    84                                          ;fclose(descriptor)
    85 00000074 FF35[70000000]                  push dword [descriptor]
    86 0000007A FF15[00000000]                  call [fclose]
    87 00000080 83C404                          add esp,4
    88                                          
    89                                          ; b) Sa se extraga din fiecare quadword acele word-uri care au ultima cifra egala cu o constanta k, definita in data segment
    90 00000083 BB00000000                      mov ebx,0
    91 00000088 BE[04000000]                    mov esi,a
    92 0000008D BF[1D000000]                    mov edi,sir_word
    93                                          repet:
    94 00000092 43                              inc ebx
    95 00000093 B908000000                      mov ecx,8
    96                                          repet2:
    97 00000098 83E902                              sub ecx,2
    98                                              ;ax=[esi+ecx]
    99 0000009B 668B040E                            mov ax,[esi+ecx]
   100 0000009F 66A3[42000000]                      mov [aux],ax
   101 000000A5 66BA0000                            mov dx,0
   102 000000A9 66F735[40000000]                    div word[hexa]
   103 000000B0 663B15[3E000000]                    cmp dx,[k]
   104 000000B7 750C                                jne ultima_cifra_nu_e_k
   105 000000B9 66A1[42000000]                      mov ax,[aux]
   106 000000BF 668907                              mov [edi],ax
   107 000000C2 83C702                              add edi,2
   108                                              ultima_cifra_nu_e_k:
   109                                              
   110 000000C5 83F900                          cmp ecx,0
   111 000000C8 75CE                            jne repet2
   112 000000CA 83C608                          add esi,8
   113 000000CD 83FB03                          cmp ebx,lena
   114 000000D0 75C0                            jne repet
   115                                          
   116                                          ; a) Sa se printeze pe ecran sirul bite-urilor care compun quadword-ul
   117 000000D2 BE[04000000]                    mov esi, a
   118 000000D7 BB00000000                      mov ebx,0
   119                                          
   120                                          repeta:
   121                                          ;prima parte din cuvant
   122 000000DC 43                              inc ebx
   123 000000DD 8B4604                          mov eax,[esi+4]
   124                                          
   125                                          ;Convertire
   126 000000E0 BF[44000000]                    mov edi,sir
   127 000000E5 83C720                          add edi,8*4
   128 000000E8 4F                              dec edi
   129                                          ;edi->ultima pozitie din sir
   130 000000E9 B920000000                      mov ecx,8*4
   131                                          
   132                                          repeta2:
   133 000000EE BA00000000                      mov edx,0
   134 000000F3 F735[38000000]                  div dword[doi]
   135 000000F9 80C230                          add dl,'0'
   136 000000FC 8817                            mov [edi],dl
   137 000000FE 4F                              dec edi
   138 000000FF E2ED                            loop repeta2
   139                                          
   140                                          
   141                                          ;printf(format_afisare,sir)
   142 00000101 68[44000000]                    push dword sir
   143 00000106 68[35000000]                    push format_afisare
   144 0000010B FF15[00000000]                  call [printf]
   145 00000111 83C408                          add esp,4*2
   146                                          
   147                                          ;a doua parte din cuvant
   148 00000114 8B06                            mov eax,[esi]
   149                                          
   150                                          ;Convertire
   151 00000116 BF[44000000]                    mov edi,sir
   152 0000011B 83C720                          add edi,8*4
   153 0000011E 4F                              dec edi
   154                                          ;edi->ultima pozitie din sir
   155 0000011F B920000000                      mov ecx,8*4
   156                                          
   157                                          repeta3:
   158 00000124 BA00000000                      mov edx,0
   159 00000129 F735[38000000]                  div dword[doi]
   160 0000012F 80C230                          add dl,'0'
   161 00000132 8817                            mov [edi],dl
   162 00000134 4F                              dec edi
   163 00000135 E2ED                            loop repeta3
   164                                          
   165                                          
   166                                          ;printf(format_afisare,sir)
   167 00000137 68[44000000]                    push dword sir
   168 0000013C 68[35000000]                    push format_afisare
   169 00000141 FF15[00000000]                  call [printf]
   170 00000147 83C408                          add esp,4*2
   171                                          
   172                                          ;prinf(' ')
   173 0000014A 68[3C000000]                    push dword spatiu
   174 0000014F FF15[00000000]                  call [printf]
   175 00000155 83C404                          add esp,4
   176                                          
   177 00000158 83C608                          add esi,8
   178 0000015B 83FB03                          cmp ebx,lena
   179                                          
   180 0000015E 0F8578FFFFFF                    jne repeta
   181                                          
   182                                          ; exit(0)
   183 00000164 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   184 00000166 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
