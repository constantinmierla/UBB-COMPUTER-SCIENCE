     1                                  ;se citesc cuvinte de la atastatura, sa se creeze un fisier cu numele primului .txt si restul sa se afiseze in acest fisier cu literele inversate
     2                                  bits 32 ; assembling for the 32 bits architecture
     3                                  
     4                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     5                                  global start        
     6                                  
     7                                  ; declare external functions needed by our program
     8                                  extern exit,gets,printf,fopen,fprintf,fclose               ; tell nasm that exit exists even if we won't be defining it
     9                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    10                                  import gets msvcrt.dll                          ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    11                                  import printf msvcrt.dll
    12                                  import fopen msvcrt.dll
    13                                  import fprintf msvcrt.dll
    14                                  import fclose msvcrt.dll
    15                                  ; our data is declared here (the variables needed by our program)
    16                                  segment data use32 class=data
    17 00000000 FF<rept>                    sir times 100 db -1
    18 00000064 FF<rept>                    cuvinte times 100 db -1
    19 000000C8 257300                      format_s db '%s',0
    20 000000CB 256300                      format_c db '%c',0
    21 000000CE 7700                        mod_acces db 'w',0
    22 000000D0 FFFFFFFF                    descriptor dd -1
    23 000000D4 0A0D00                      new_line db 10,13,0
    24 000000D7 20000000                    spatiu dd ' '
    25                                  ; our code starts here
    26                                  segment code use32 class=code
    27                                      start:
    28 00000000 68[00000000]                    push dword sir
    29 00000005 FF15[00000000]                  call [gets]
    30 0000000B 83C404                          add esp,4
    31                                          
    32                                          ;printf(format,variabile)
    33 0000000E 68[00000000]                    push dword sir
    34 00000013 68[C8000000]                    push dword format_s
    35 00000018 FF15[00000000]                  call [printf]
    36 0000001E 83C408                          add esp,4*2
    37 00000021 68[D4000000]                    push dword new_line
    38 00000026 68[C8000000]                    push dword format_s
    39 0000002B FF15[00000000]                  call [printf]
    40 00000031 83C408                          add esp,4*2
    41                                          
    42 00000034 BE[00000000]                    mov esi,sir
    43 00000039 BF[64000000]                    mov edi,cuvinte
    44                                          
    45                                          repeta:
    46 0000003E AC                                  lodsb
    47 0000003F 3C20                                cmp al,' '
    48 00000041 7403                                je creaza_fisier
    49 00000043 AA                                  stosb
    50 00000044 EBF8                            jmp repeta
    51                                          
    52                                          creaza_fisier:
    53 00000046 C7072E747874                    mov dword[edi],'.txt'
    54 0000004C 83C703                          add edi,3
    55                                          ;fopen(nume,mod_acces)
    56 0000004F 83C701                          add edi,1
    57 00000052 C60700                          mov byte[edi],0
    58 00000055 68[CE000000]                    push dword mod_acces
    59 0000005A 68[64000000]                    push dword cuvinte
    60 0000005F FF15[00000000]                  call [fopen]
    61 00000065 83C408                          add esp,4*2
    62                                          
    63 00000068 83F800                          cmp eax,0
    64 0000006B 0F8493000000                    je final_tot
    65 00000071 A3[D0000000]                    mov [descriptor],eax
    66                                          ;---------------pana aici merge si creaza fisierul
    67                                          ;esi e fix dupa primul spatiu
    68                                          
    69 00000076 BF[64000000]                    mov edi,cuvinte
    70                                          ;pun invers cuvintele ramase
    71                                          repeta1:
    72 0000007B AC                                  lodsb
    73 0000007C 3C00                                cmp al,0
    74 0000007E 7407                                je final_repeta1 ;nu mai sunt cuvinte
    75 00000080 3C20                                cmp al,' '
    76 00000082 7405                                je afiseaza
    77                                              
    78                                              ;daca nu e spatiu si nu e la final, stocam litera 
    79 00000084 AA                                  stosb
    80 00000085 EBF4                                jmp repeta1
    81                                          final_repeta1:
    82 00000087 EB48                            jmp final_aproape_tot
    83                                          
    84                                          afiseaza:
    85                                              ;resetam cuvinte dupa ce afisam
    86                                              repeta2:
    87 00000089 4F                                      dec edi
    88 0000008A 81FF[63000000]                          cmp edi,cuvinte-1
    89 00000090 741E                                    je gata_repeta2
    90                                                  
    91 00000092 B800000000                              mov eax,0
    92 00000097 8A07                                    mov al,byte[edi]
    93 00000099 50                                      push dword eax
    94 0000009A 68[CB000000]                            push dword format_c
    95 0000009F FF35[D0000000]                          push dword[descriptor]
    96 000000A5 FF15[00000000]                          call [fprintf]
    97 000000AB 83C408                                  add esp,4*2
    98 000000AE EBD9                                jmp repeta2
    99                                              gata_repeta2:
   100 000000B0 FF35[D7000000]                      push dword [spatiu]
   101 000000B6 68[CB000000]                        push dword format_c
   102 000000BB FF35[D0000000]                      push dword[descriptor]
   103 000000C1 FF15[00000000]                      call [fprintf]
   104 000000C7 83C408                              add esp,4*2
   105 000000CA BF[64000000]                        mov edi,cuvinte
   106 000000CF EBAA                            jmp repeta1
   107                                          
   108                                          
   109                                          final_aproape_tot:
   110                                          repeta3:
   111 000000D1 4F                                      dec edi
   112 000000D2 81FF[63000000]                          cmp edi,cuvinte-1
   113 000000D8 741E                                    je gata_repeta3
   114                                                  
   115 000000DA B800000000                              mov eax,0
   116 000000DF 8A07                                    mov al,byte[edi]
   117 000000E1 50                                      push dword eax
   118 000000E2 68[CB000000]                            push dword format_c
   119 000000E7 FF35[D0000000]                          push dword[descriptor]
   120 000000ED FF15[00000000]                          call [fprintf]
   121 000000F3 83C408                                  add esp,4*2
   122 000000F6 EBD9                                jmp repeta3
   123                                              gata_repeta3:
   124                                          ;fclose(decsriptor)
   125 000000F8 FF35[D0000000]                  push dword[descriptor]
   126 000000FE FF15[00000000]                  call [fclose]
   127                                          final_tot:
   128                                          ; exit(0)
   129 00000104 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   130 00000106 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
