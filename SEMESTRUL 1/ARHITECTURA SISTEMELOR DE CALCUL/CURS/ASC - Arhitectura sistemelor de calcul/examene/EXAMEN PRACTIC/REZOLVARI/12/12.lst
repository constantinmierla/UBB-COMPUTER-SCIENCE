     1                                  ;se citesc 3 numere din fisier. sa se afiseze inmultirea lor pe ecran
     2                                  bits 32 ; assembling for the 32 bits architecture
     3                                  
     4                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     5                                  global start       
     6                                  
     7                                  ; declare external functions needed by our program
     8                                  extern exit,fopen,fclose,printf,fscanf               ; tell nasm that exit exists even if we won't be defining it
     9                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    10                                  import fopen msvcrt.dll
    11                                  import fclose msvcrt.dll
    12                                  import printf msvcrt.dll   
    13                                  import fscanf msvcrt.dll                       ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    14                                  
    15                                  ; our data is declared here (the variables needed by our program)
    16                                  segment data use32 class=data
    17 00000000 7200                        mod_acces db 'r',0
    18 00000002 696E7075742E747874-         nume db 'input.txt',0
    18 0000000B 00                 
    19 0000000C FFFFFFFF                    descriptor dd -1
    20 00000010 2564202564202564            format db '%d %d %d'
    21 00000018 2564                        format_d db '%d'
    22 0000001A FFFFFFFF                    a dd -1
    23 0000001E FFFFFFFF                    b dd -1
    24 00000022 FFFFFFFF                    c dd -1
    25 00000026 FFFFFFFF                    aux dd -1
    26                                  ; our code starts here
    27                                  segment code use32 class=code
    28                                      start:
    29                                          ;fopen(nume,mod_acces)
    30 00000000 68[00000000]                    push dword mod_acces
    31 00000005 68[02000000]                    push dword nume
    32 0000000A FF15[00000000]                  call [fopen]
    33 00000010 83C408                          add esp,4*2
    34                                          
    35 00000013 83F800                          cmp eax,0
    36 00000016 746B                            je final_tot
    37 00000018 A3[0C000000]                    mov [descriptor],eax
    38                                          
    39                                          ;fscanf(descriptor,format,variabile)
    40 0000001D 68[22000000]                    push dword c
    41 00000022 68[1E000000]                    push dword b
    42 00000027 68[1A000000]                    push dword a
    43 0000002C 68[10000000]                    push dword format
    44 00000031 FF35[0C000000]                  push dword[descriptor]
    45 00000037 FF15[00000000]                  call [fscanf]
    46 0000003D 83C414                          add esp,4*5
    47                                          
    48 00000040 A1[1A000000]                    mov eax,dword[a]
    49 00000045 8B1D[1E000000]                  mov ebx,dword[b]
    50 0000004B 8B0D[22000000]                  mov ecx,dword[c]
    51 00000051 F6E3                            mul bl ;->rezultat in ax
    52 00000053 66F7E1                          mul cx ;rezultat in dx ax
    53                                          
    54 00000056 6652                            push dx
    55 00000058 6650                            push ax
    56 0000005A 8F05[26000000]                  pop dword[aux]
    57                                          
    58                                          ;va fi in dx:ax
    59                                          ;printf(format,variabile)
    60 00000060 FF35[26000000]                  push dword[aux]
    61 00000066 68[18000000]                    push dword format_d
    62 0000006B FF15[00000000]                  call [printf]
    63 00000071 83C408                          add esp,4*2
    64                                          
    65                                          
    66                                          
    67                                          ;fclose(descriptor)
    68 00000074 FF35[0C000000]                  push dword[descriptor]
    69 0000007A FF15[00000000]                  call [fclose]
    70 00000080 83C404                          add esp,4*1
    71                                          final_tot:
    72                                          ; exit(0)
    73 00000083 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    74 00000085 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
