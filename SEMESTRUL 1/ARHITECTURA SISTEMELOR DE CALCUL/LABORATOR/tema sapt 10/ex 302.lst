     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit, fopen, fprintf, fclose, printf, scanf
     6                                  import exit msvcrt.dll
     7                                  import fopen msvcrt.dll
     8                                  import fprintf msvcrt.dll
     9                                  import fclose msvcrt.dll
    10                                  import exit msvcrt.dll    
    11                                  import printf msvcrt.dll    
    12                                  import scanf msvcrt.dll     
    13                                  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16 00000000 33302E74787400              file_name db "30.txt", 0       
    17 00000007 7700                        access_mode db "w", 0           
    18                                                                      
    19 00000009 FFFFFFFF                    file_descriptor dd -1           
    20 0000000D 257300                      stringformat db "%s", 0
    21 00000010 25730A00                	newline db "%s", 10, 0
    22 00000014 <res 00000064>          	text resb 100  
    23                                  
    24                                  ; our code starts here
    25                                  segment code use32 class=code
    26                                      ;30/2. Se da un nume de fisier (definit in segmentul de date). Sa se creeze un fisier cu numele dat, apoi sa se citeasca de la tastatura cuvinte pana cand se citeste de la tastatura caracterul '$'. Sa se scrie i
    27                                      start:
    28                                          
    29 00000000 68[07000000]                    push dword access_mode     
    30 00000005 68[00000000]                    push dword file_name
    31 0000000A FF15[00000000]                  call [fopen]
    32 00000010 83C408                          add esp, 4*2                
    33                                  
    34 00000013 A3[09000000]                    mov [file_descriptor], eax  
    35                                  
    36                                          
    37 00000018 83F800                          cmp eax, 0
    38 0000001B 745A                            je final
    39                                  
    40                                          
    41                                  		read_value:
    42 0000001D 68[14000000]            			push dword text
    43 00000022 68[0D000000]            			push dword stringformat
    44 00000027 FF15[00000000]          			call [scanf]       
    45 0000002D 83C408                  			add esp, 4 * 2
    46                                  			
    47                                  			
    48 00000030 A0[14000000]            			mov AL, [text]
    49 00000035 B324                    			mov BL, '$'
    50 00000037 38D8                    			cmp AL, BL
    51                                  			
    52 00000039 742D                    			jz close
    53 0000003B BE[14000000]            			mov esi, text
    54                                  			check:
    55 00000040 AC                      				LODSB
    56 00000041 3C00                    				cmp AL, 0
    57 00000043 74D8                    				jz read_value
    58 00000045 3C30                    				cmp AL, '0'
    59 00000047 72F7                    				jb check
    60 00000049 3C39                    				cmp AL, '9'
    61 0000004B 77F3                    				ja check
    62 0000004D 68[14000000]            				push dword text
    63 00000052 68[10000000]            				push dword newline
    64 00000057 FF35[09000000]          				push dword [file_descriptor]
    65 0000005D FF15[00000000]          				call [fprintf]
    66 00000063 83C40C                  				add esp, 4 * 3
    67 00000066 EBB5                    				jmp read_value
    68                                  	
    69                                          
    70                                  		close:
    71 00000068 FF35[09000000]          			push dword [file_descriptor]
    72 0000006E FF15[00000000]          			call [fclose]
    73 00000074 83C404                  			add esp, 4
    74                                  
    75                                        final:
    76                                  
    77                                          ; exit(0)
    78 00000077 6A00                            push dword 0
    79 00000079 FF15[00000000]                  call [exit]
