     1                                  bits 32 
     2                                  
     3                                  global start        
     4                                  
     5                                  extern exit               
     6                                  import exit msvcrt.dll    
     7                                  
     8                                  
     9                                  segment data use32 class=data
    10                                      
    11 00000000 0A                          a db 10
    12 00000001 0200                        b dw 2
    13 00000003 08000000                    c dd 8
    14 00000007 0400000000000000            d dq 4
    15                                  
    16                                  
    17                                  segment code use32 class=code
    18                                  
    19                                      ;29. d+c-b+(a-c)  = 12   a - byte, b - word, c - double word, d - qword - Interpretare fara semn
    20                                  
    21                                      start:
    22                                  
    23 00000000 A0[00000000]                mov al, [a]     ; al = a-c
    24 00000005 B400                        mov ah, 0       ; ah = 0    ; ax = 0000 1010
    25 00000007 668B1D[03000000]            mov bx, [c]     ; bx = c
    26 0000000E 6629D8                      sub ax, bx      ;         dx:ax -
    27 00000011 6619CA                      sbb dx, cx      ;         cx:bx
    28 00000014 6652                        push dx
    29 00000016 6650                        push ax
    30 00000018 58                          pop eax        
    31 00000019 89C1                        mov ecx, eax    ; ecx = a-c 
    32                                          ; c + d  
    33 0000001B 8B1D[07000000]              mov ebx, [d]    ; ebx = d
    34 00000021 66A1[03000000]              mov ax, [c]     ; ax = c
    35 00000027 99                          cdq             ; edx:eax = c
    36 00000028 01C3                        add ebx, eax    ; ebx = ebx + eax = c + d   
    37                                          ; d + c - b   
    38 0000002A 66A1[01000000]              mov ax, [b]     ; ax = b
    39 00000030 6699                        cwd
    40 00000032 99                          cdq             ; edx:eax = b
    41 00000033 29C3                        sub ebx, eax    ; ebx = d + c - b 
    42                                          ;d + c - b + ( a - c )     
    43 00000035 89C8                        mov eax, ecx    ; eax = a - c
    44 00000037 99                          cdq             
    45 00000038 01D8                        add eax, ebx    ; eax = eax + ebx => d+c-b+(a-c)
    46 0000003A 11CA                        adc edx, ecx
    47                                    
    48 0000003C 6A00                            push    dword 0      
    49 0000003E FF15[00000000]                  call    [exit]      
